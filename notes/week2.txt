
week2's lecture touched upon debugging using printf or similar for other languages, but also taught us how to use debug50, the cs50 ide's debugging feature. He also touched upon rubber ducky debugging.

now were learning about arrays, and he just introduced constants and said something I had never heard of before. That is to always:

CAPITALIZE CONSTANTS!

so that you can see visually, that theres something different about this not so variable variable.

you can use %i to printf() a char to get the ascii number

use single quotes for single characters

#include <string.h> for strlen() function.

to declare a function, you need to copy the line of declaration, and paste it up by your includes. be sure to use a semicolon too!

instead of declaring an array's size, if it's small and you have the values already, you can declare it and the values in one line, like this:
int nums[] = {1, 7, 42, 3, 19, 3};

command line arguments, traditionally called int argc (arg count) and string argv (arg vector)
they go into the main function   
int main(int argc, string argv[])

return:
return 0 if everything went well, or return 1 if there was an error.

one thing I discovered on my own this week was 
continue;

I used continue to not skip over an iteration, but to sort of say this iteration is finished, theres no need to run this variable through the rest of the loop.


